services:
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: NDA4ZGU4LThmNmQtNDExMS1hNjk1LTFiNTk1YjVjYzkxMQ==
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 5s
      timeout: 5s
      retries: 10
      
# https://localhost:9000 to check partitions, topics, messages
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx128M"
  
  gateway:
    build:
      context: ./GatewayService
      dockerfile: Dockerfile
    container_name: GatewayService
    ports:
      - "5002:82"
    environment:
      - ASPNETCORE_URLS=http://+:82

  authorization:
    build:
      context: .
      dockerfile: AuthorizationService/Dockerfile
    env_file:
      - ./AuthorizationService/.env
    container_name: AuthorizationService
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "5001:81"
    environment:
      - KAFKA__BOOTSTRAP_SERVERS=kafka:9092
      - ASPNETCORE_URLS=http://+:81
  
  mail:
    build:
      context: .
      dockerfile: MailService/Dockerfile
    env_file:
      - ./MailService/.env
    container_name: MailService
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "5003:83"
    environment:
      - KAFKA__BOOTSTRAP_SERVERS=kafka:9092
      - ASPNETCORE_URLS=http://+:83
  
  fileservice:
    build:
      context: .
      dockerfile: FileService/Dockerfile
    env_file:
      - ./FileService/.env
    container_name: FileService
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "5004:84"
    environment:
      - KAFKA__BOOTSTRAP_SERVERS=kafka:9092
      - ASPNETCORE_URLS=http://+:84

  assetcrafterservice:
    build:
      context: .
      dockerfile: AssetCrafterService/Dockerfile
    env_file:
      - ./AssetCrafterService/.env
    container_name: AssetCrafterService
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "5005:85"
    environment:
      - KAFKA__BOOTSTRAP_SERVERS=kafka:9092
      - ASPNETCORE_URLS=http://+:85

  userscoorinatorservice:
    build:
      context: .
      dockerfile: UsersCoordinatorService/Dockerfile
    env_file:
      - ./UsersCoordinatorService/.env
    container_name: UsersCoordinatorService
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "5006:86"
    environment:
      - KAFKA__BOOTSTRAP_SERVERS=kafka:9092
      - ASPNETCORE_URLS=http://+:86